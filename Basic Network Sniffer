!pip install scapy
from scapy.all import sniff
from scapy.layers.inet import IP, TCP, UDP, ICMP

def packet_callback(packet):
    print("\n=== Packet Captured ===")

    #Check if the packet has IP layer
    if IP in packet:
        ip_layer = packet[IP]
        print(f"From: {ip_layer.src} --> To: {ip_layer.dst}")
        print(f"Protocol: {ip_layer.proto}")

        #Check for TCP/UDP/ICMP payload
        if packet.haslayer(TCP):
            tcp_layer = packet[TCP]
            print(f"TCP Packet: Src Port {tcp_layer.sport} -> Dst Port {tcp_layer.dport}")
        elif packet.haslayer(UDP):
            udp_layer = packet[UDP]
            print(f"UDP Packet: Src Port {udp_layer.sport} -> Dst Port {udp_layer.dport}")
        elif packet.haslayer(ICMP):
            print("ICMP Packet Detected")

        #Display Raw Payload if exists
        if packet.haslayer(Raw):
            raw_data = packet[Raw].load
            print(f"Payload: {raw_data}")

#Start sniffing (Ctrl+C to stop)
print("Starting packet sniffing... (Press Ctrl+C to stop)\n")
sniff(prn=packet_callback, count=10)  
#Change count=None for continuous sniffing
